Issues Faced

1)SLF4J
	issue: faced issue with the logback.xml configuration which writes log messages to a file.
	
	solution: wrote a "logger name" tag with value as package name and set the level to "debug" 
		
				<property name="DEV_HOME" value="D:/rishwanth/javaworkspace/log_files" />
				
					<appender name="FILE-AUDIT"
						class="ch.qos.logback.core.rolling.RollingFileAppender">
						<file>${DEV_HOME}/debug.log</file>
						<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
							<Pattern>
								%d{yyyy-MM-dd HH:mm:ss} --- %-5level --- %logger{36} --- %msg%n
							</Pattern>
						</encoder>
				
						<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
							<!-- rollover daily -->
							<fileNamePattern>${DEV_HOME}/archived/debug.%d{yyyy-MM-dd}.%i.log
				                        </fileNamePattern>
							<timeBasedFileNamingAndTriggeringPolicy
								class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
								<maxFileSize>10MB</maxFileSize>
							</timeBasedFileNamingAndTriggeringPolicy>
						</rollingPolicy>
				
					</appender>
				
					<logger name="com.bizprout.web" level="debug"
						additivity="false">
						<appender-ref ref="FILE-AUDIT" />
					</logger>
				
					<root level="error">
						<appender-ref ref="FILE-AUDIT" />
					</root>
					
2) angular JS

		AJAX: Ajax configuration was not working properly
		
		solution:
		var app = angular.module("bizapp", [ "ngCookies" ]);
		
		app.controller("bizappctrl", function ($scope, $cookies) {
				var parameter = JSON.stringify({
								"username" : $scope.username,
								"password" : $scope.password
							});

//post request with json data type

							$http({
								method : "POST",
								url : "login/authe",
								data : parameter,
								headers : {
									'Content-Type' : 'application/json'
								}
							})
									.then(
											function mySucces(response) {
											
											
											// to get data
											
											response.data.{Json key name without braces}

													$window.location = "Landing_Page.html";

											},
											function myError(response) {

												if (response.statusText == "error") {
													
													//to get cookies - angularjs version > 1.3
													
 													$cookies.put('User', response.data.loginUserName);		
 													
 													
 													to get data or string before any character
 													
 													{string without braces}.substr(0,{string without braces}.indexOf('your character'));
 													
 													
 																							}

											});
						}
					});					
					
					
3) If any errors relating to bean class loading (bean class not found exception)

	check whether you have annotated your service class with @Service and also Repository class with @Repository
	
4) Angular js dropdown options: how to set to the DTO.

	the names should be same as in the JavaDTO what you are passing and after that set your data to the ng-model. so your selection appears as a JSON.	
	
5) JSON is not supported for jackson version 2.5.2 and databind 2.4.1
	update version to 
	
	<jackson.core.version>2.6.0</jackson.core.version>
		<jackson.databind.version>2.6.0</jackson.databind.version>						
					